#!/usr/bin/env python3
"""
Embed every heading from the Round-1 A outline JSON files once and cache
the vectors plus metadata into a compressed NumPy archive.  
Usage
    python build_heading_cache.py <outlines_dir> <cache_file.npz>

• <outlines_dir>   directory that holds one  *.json  file per PDF
  (the files generated by your 1 A extractor).

• <cache_file.npz> target file that will be created, typically
  models/heading_cache.npz

The script is normally executed DURING the Docker build so that the cache
is already inside the image and runtime start-up is instant.
"""
import json
import sys
import numpy as np
from pathlib import Path

# import the helpers you already defined in src/utils.py
from utils import norm, embed_dense


def main(outlines_dir: str, cache_path: str) -> None:
    outlines_dir, cache_path = map(Path, (outlines_dir, cache_path))

    texts: list[str] = []
    meta:  list[tuple[str, int, str, str]] = []      # (pdf, page, level, text)
    titles: dict[str, str] = {}                     # pdf stem -> document title

    for js in sorted(outlines_dir.glob("*.json")):    # deterministic order
        doc = json.load(js.open(encoding="utf-8"))
        # store document-level title from outline JSON
        titles[js.stem] = doc.get("title", "")
        for h in doc["outline"]:
            clean_text = norm(h["text"])
            texts.append(clean_text)
            meta.append((js.stem, h["page"], h["level"], clean_text))

    # batch-encode every heading with the quantised MiniLM-L12 ONNX model
    vectors = embed_dense(texts).astype("float32")    # shape (N,384)

    # save both arrays in a single .npz (≈40 MB for 15 k headings)
    # include titles mapping for section headings
    np.savez(cache_path,
             emb=vectors,
             meta=np.array(meta, dtype="object"),
             titles=np.array(titles, dtype="object"))
    print(f"✅  cached {len(texts)} headings  →  {cache_path}")


if __name__ == "__main__":
    if len(sys.argv) != 3:
        sys.exit("usage: build_heading_cache.py <outlines_dir> <cache.npz>")
    main(sys.argv[1], sys.argv[2])
